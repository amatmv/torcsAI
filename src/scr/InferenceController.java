package scr;

import net.sourceforge.jFuzzyLogic.FIS;
import net.sourceforge.jFuzzyLogic.FunctionBlock;

import static java.lang.Math.abs;

public class InferenceController extends Controller {

    private double [] _track_info = {
            1.0750876316454576, -0.4304378580689154, 0.7208489115776778, 0.3609823628256763, -0.2683314867282607, -0.26261407398365877, -0.2557476551419329, -0.2535455274970652, -0.24737458187062042, 0.3087956807701733, 0.4875585451040352, 0.492517483134281, 0.4469968108934139, -0.22618351840454484, -0.23120554275686733, -0.22907796824726204, -0.22555639367903527, -0.2265963079712633, -0.2247445904293844, -0.21902452618058282, -0.21101327013518434, -0.20129234680133168, -0.16259023752129845, 0.18262106055492086, 0.18581251342551575, 0.18496261522334745, 0.18044284043014702, 0.18023821279265542, 0.1809901687022554, 0.17963754656047434, 0.17694353032905621, 0.18113434895549924, 0.17928516353729917, 0.18756891504628473, -0.11521511141135132, -0.18097001224379003, -0.17386438939582713, -0.1661604250942469, -0.15877824470339585, -0.16943044291392276, -0.16165604096345637, -0.15585396858002545, -0.1647327754367128, -0.17278550364673134, -0.18303067397146652, 0.003309162064139606, 0.11877386672863335, 0.08112121024444298, 0.03234438472343081, -0.025621466611599406, -0.09242824454095826, -1.4726939512313248, -0.9296008805995677, -0.9831862709388157, -1.0434999898439046, -0.9592716759783413, -1.009379378227937, -1.0114674000860335, -0.8988791030976474, -0.32683895636194604, 0.03164664824197024, -0.14684902702962394, -0.16667028673236856, 0.16346469041164718, -0.059887446062524254, -0.30209890215121077, 0.11680053185194868, -0.17099990359260095, -0.11917011942286218, 0.07344434783436671, -0.18931982359229893, -0.09356514476211901, 0.10758581686095268, -0.14077771047967505, -0.09966963948358692, 0.13497583366038685, -0.2582493462126909, -0.03822733093804749, 0.28224703001566726, -0.13853240258626162, -0.19447465720325555, -0.020661937581802035, 0.06530503356090407, -0.30598949711465123, -0.06285052732684732, 0.16051805400256489, -0.2648987658250554, -0.016031668105506266, 0.0850632722238673, -0.18051296674720121, 0.05347924707613702, -0.31424812530718615, 0.17535021915019083, 0.2000746004578323, -0.3379374806407685, -0.1973568763545335, -0.051484173792006226, -0.009833602837558991, 0.07443254167833165, -0.3066646348006857, -0.091581624590724, 0.06337709375558596, -0.22463849727467633, -0.22597205026320932, -0.24568649104051116, 0.019296468682262324, -0.2772908622418234, -0.3068191367565929, -0.6277752990826704, -0.6632198846570112, -0.5996903246975573, -0.5714618015193239, -0.6106050610937559, -0.528006878815436, -0.5447510139596476, -0.527555786951085, -0.5262481492745108, -0.43497426881694706, -0.45677514856088697, -0.505786027666892, -0.515108823089861, -0.47676871686094713, -0.6024926190613742, -0.5474326672322924, -0.566960087742289, -0.5703263309741481, -0.639761659436546, -0.6185541151754097, -0.63896325193797, -0.6708299656037315, -0.6762833777512818, -0.7040097299102095, -0.7286997044951089, -0.8649478981027647, -0.8711241216048675, -0.8769304916870486, -0.9429092467040185, -1.0341205356403487, 2.8396972925876707, -0.1283396676420297, 1.362992014484573, 0.7364923471608404, 0.6945147467784103, 0.6908625919115371, 0.578518930743086, 0.5632321608022038, 0.5326538975358849, 0.4536012549941107, 0.4357658527762794, 0.4478598060811958, 0.40830030385848026, 0.38587123344664337, 0.3836642397889147, 0.3770421664839626, 0.43380149971299137, 0.43745156573490934, 0.4583994052127883, 0.4898259008517711, 0.5527491672012029, 0.5463384264464475, 0.6615009999357113, 0.7835106348409111, -0.07925606537848301, -0.1528047073345247, -0.24162899218150843, -2.0182405821635907, -0.19582277367285283, -1.2551448702705894, -0.6712979278206322, -0.6343774345840058, -0.5950298285446248, -0.4925274903635196, -0.9239582958795853, -0.924825350319235, -0.7927300029076181, -0.7708466926419166, -0.6838794723275082, -0.6013655475641577, -0.5668858094963839, -0.5441104455674919, -0.48587858283075774, -0.43744944767314226, 3.0446014109672688, -0.5869187688130106, 1.7612483945167163, 0.25232687103417406, 0.6108607793530153, 0.4558523212069467, 0.5033438242238261, 0.3942004774163678, 0.34996792382275915, 0.36027858435343774, 0.2852530651453696, 0.32952552664178414, 0.22982766849333675, 0.2563194042703747, 0.27770982723722104, 0.2176124220659765, 0.2416576609109325, 0.24240715180127273, 0.31089484554325286, 0.24575022484483375, 0.23198469932964436, 0.10361867077215395, 0.22804201927328138, 0.2353260017715858, 0.23007179129119146, 0.17077752096148432, 0.14606258246454545, 0.1281078620864919, 0.21164872950600389, 0.1749220081962863, 0.049018057488138894, 0.24764342963097746, 0.13098937610729872, 0.16537355540885046, 0.1596043549230708, -1.588425091227177, -1.7574482722066553, -0.8738110001377767, -0.7052944845400542, 1.1863108762571297, 0.3439871545075994, -0.4032308186805418, -0.39738711076967287, -0.39811966106145164, -0.11219841654361615, 0.30359713975142344, 0.28000108971965265, 0.25278092667703456, 0.2310153852951382, 0.19846772828011847, 0.17884611339758938, -0.5210671493383423, -0.6406835566591492, -0.6427600394474292, 0.45074076875249186, 0.45371930395090093, 0.42313133159248595, 0.07990647197590944, -0.4582945781199197, -0.47886781283314767, -0.4963653215243609, -0.13593454642189937, 0.2944790503486828, 0.2642476644644136, 0.2289828722376379, 0.20194635099358538, 0.17196760256573984, -0.07986107439126877, -0.5723925768827662, -0.6054400707137502, -0.7662592919252552, -0.3225440520585006, -0.35785979620572866, -0.38895869118093623, -0.31727352050161606, -0.43515672309348963, -0.37354119385203954, -0.39548248126768515, -0.33943470306673124, -0.4406462635565561, -0.30872781749938705, -0.4450544320769326, -0.38204240923194, -0.40794188662121567, -0.4236811055944752, -0.45525711669642577, -0.4088475829646636, -0.4897330553220443, -0.4157701637440985, -0.4643500117827216, -0.454774662312614, -0.45638437983079416, -0.49424760219090996, -0.5398883272534412, -0.47141277576706714, -0.5300145277378795, -0.4756132704988833, -0.5405098500480106, -0.5576270508843492, -0.5571892602091341, -0.5341371763170139, -0.6832050666325622, -0.6166946127669353, -0.20506111695918758, 0.46114186009053587, 0.4241287338529256, 0.3977411399873986, -0.335422122071171, -0.460046977351648, -0.47991669008921634, -0.4961620290637471, 0.07424436382838129, 0.21485509551692542, 0.20052797845915735, 0.18750833571514558, 0.17629336830461784, 0.1576258205534648, 0.13868800158632344, 0.12338676461127147, -0.03400956574044124, -0.24898183009697492, -0.24496319902228247, -0.24160511921893382, -0.2331776147133053, -0.22057248941197147, -0.20026118498623652, -0.18237585924830815, 0.06573137344505596, 0.25434970610134583, 0.25514711457345796, 0.24400364981172598, 0.25055345266263773, 0.24091785184366388, 0.2369418176237615, 0.060119021841975345, -0.6204926977541602, -0.6254921968871565, -0.2235070196937631, 0.48865524054188403, 0.4794976707442658, 0.46387308534534316, -0.1894752774507802, -0.2976111585340514, -0.32308963831748266, -0.3499321505072127, -0.3668422033633534, -0.1456433683408504, 0.38680221489856376, 0.3806143549372721, 0.37396850731575476, -2.588469135778785, -0.9341290010336525, -0.9819828461737463, -0.7369330246455448, -0.8581624852276114, -0.9305485561606899, -0.8241516502837384, -0.79747910139816, -0.7117716314635074, 0.18260812661796602, 0.17895189082223578, 0.17320995166378725, 0.16918186753680012, -1.5210585470802611, -0.7506224134742789, -0.9875388407462142, -1.0873146107694616, -1.272038342429023, -1.4101620448597232, -1.5218110747597242, -2.246254172536631, -3.8692393904751983, -5.225209690909994, 7.652468885598945, -2.422580166280957, 1.6030182132181097, -0.4227611295814433, -0.8851477199715942, 0.2844267769544707, 0.6881906579348811, 0.2921804538182014, -0.4616275440315955, -0.4770312314846737, -0.5029821753872783, -0.1286633836322409, 0.16242007629680938, 0.13878379188792406, 0.11923808416709103, 0.10573946792392766, 0.0825724934751915, 0.07615237871061253, 0.09022077618857952, 0.11835706534809627, 0.13154047303395436, 0.12863569363459215, 0.12084888553473674, 0.12571299773232655, -0.1465710310142916, -0.1766045053578441, -0.15333859587326104, -0.12131195315028322, -0.08529367819987789, -0.04633986011820935, -0.010141050212735678, 0.026967051834022236, 0.06532405150619182, 0.14864409197985323, 2.1470781859580295, 0.5826546960998678, 0.9641330172912108, 0.784398354677036, 0.8413046896236708, 0.7699734398399615, 0.7350651084236256, 0.6853125569403331, 0.7193746563931278, 0.6313184438260567, 0.7121752664292332, 0.5556031172022263, 0.6481995107775791, 0.6081360692901328, 0.5343903516140998, 0.5504171299877204, 0.5331892930966171, 0.6348378255626114, 0.6689504858075729, 0.5895365037190478, 0.6497445790313374, 0.6812417188789233, 0.7189506010751535, 0.7101039421360903, 0.7612828143832243, 0.8399989588938372, 0.9535563209769277, 0.9566976371703638, 1.095913193844634, 1.1251769597668195, 1.3036556136380892, 1.511936891969859, 1.6709021713918863, -0.4886898043442589, -0.8604725454296858, -0.7159117994482335, -0.3984905172777485, -0.38563594260821576, -0.3711908273303789, -0.36780335604280034, -0.3411704568839437, -0.38370865644266516, -0.37574175729792497, -0.41036203262810156, -0.3729871847318259, -0.4081767392074682, -0.4052910248772835, -0.45824861347780493, -0.41867181757292954, -0.47250381633813976, -0.4722128640177129, -0.4508174311530618, -0.4774413123702062, -0.4613180330667268, -0.5079644466544808, -0.8963048456348212, -1.8381263209090828, -1.8117044271349636, -1.8384626598185758, -2.1005648866775557, -2.2169395819284956, 2.6837812115792907, -1.902212179958467, 4.449833798696915, 2.536245181319507, -1.735007760585613, 2.7393748320356233, 0.27723563052969913, 0.08476387373159122, -0.4477981840554549, -0.4476453989799329, -0.4457545968838506, 0.32273678719700205, 0.3839296462486789, 0.38432214741004045, 0.39110864413465896, 0.0064317119538596715, -0.3199231988075956, -0.3121283670801029, -0.3080148127833822, -0.3102216905163421, -0.31071456870457853, 0.43520737876175464, 0.47598883847584206, 0.4651829786854427, 0.3088750845244927, -0.2536505886385866, -0.24509010994070954, -0.24428823098225133, -2.8755082355421346, -3.8090600175911495, -1.4719304527612498
    };

    private double _factor_curva = 0.0;
    private int _ultim_metre = 0;

    public Action control(SensorModel sensorModel) {
        String fileName = "torcs_rules.fcl";

        FIS fis = FIS.load(fileName);
        if( fis == null ) {
            System.err.println("Can't load file: '" + fileName + "'");
            return null;
        }

        // Bloc de regles de acceleracio
        FunctionBlock accRules = fis.getFunctionBlock("acceleracio");

        if (_ultim_metre % 9 == 0) {
            _factor_curva = 0.0;
            int start = _ultim_metre / 9;
            for (int i = start; i < start + 7 % _track_info.length; i++)
                _factor_curva += _track_info[i];
        }
        int metresActuals = (int) sensorModel.getDistanceFromStartLine();
        if (metresActuals == _ultim_metre+1)
            _ultim_metre = metresActuals;

        double velocitatActual = sensorModel.getSpeed();
        accRules.setVariable("curva", _factor_curva);
        accRules.setVariable("velocitat", velocitatActual);

        accRules.evaluate();

        double acceleracio = accRules.getVariable("acceleracio").getValue();
        double fre = accRules.getVariable("fre").getValue();

        // Bloc de regles de gir
        FunctionBlock steerRules = fis.getFunctionBlock("gir");

        double distanciaVorals = sensorModel.getTrackPosition();
        double distEsquerra, distDreta;
        if (distanciaVorals < 0) {
            distEsquerra = abs(distanciaVorals);
            distDreta = 0;
        } else {
            distDreta = abs(distanciaVorals);
            distEsquerra = 0;
        }

        steerRules.setVariable("acceleracio", acceleracio);
        steerRules.setVariable("distVoralDret", distDreta);
        steerRules.setVariable("distVoralEsquerre", distEsquerra);
        steerRules.setVariable("fre", fre);
        steerRules.setVariable("curva", _factor_curva);

        steerRules.evaluate();

        //Bloc de regles del canvi de marxa

        FunctionBlock gearboxRules = fis.getFunctionBlock("outgear");

        double rpms = sensorModel.getRPM();
        gearboxRules.setVariable("rpm", rpms);
        gearboxRules.setVariable("acceleracio", acceleracio);

        gearboxRules.evaluate();

        Action action = new Action ();

        acceleracio = accRules.getVariable("acceleracio").getValue();
        double gir = steerRules.getVariable("gir").getValue();
        double outgear = gearboxRules.getVariable("outgear").getValue();
        fre = accRules.getVariable("fre").getValue();

        action.steering = -gir;
        action.accelerate = acceleracio;
        action.brake = fre;

        int currentGear = sensorModel.getGear();
        if (outgear == -1 && currentGear > 0)
            action.gear = currentGear + (int) outgear;
        else if (outgear == 1 && currentGear <= 6)
            action.gear = currentGear + (int) outgear;
        else
            action.gear = currentGear;

        if (_ultim_metre % 20 == 0 && _ultim_metre != 0){
            System.out.println("--" +
                    "------------------------ INPUT ---------------------------");
            System.out.println("curva"+_factor_curva);
            System.out.println("voralDret: "+distDreta);
            System.out.println("voralEsquerra"+distEsquerra);
            System.out.println("velocitat"+sensorModel.getSpeed());
            System.out.println("rpm"+rpms);
            System.out.println("gear"+sensorModel.getGear());
            System.out.println("-----------------------------------------------------------------");
            System.out.println("");
            System.out.println("");
            System.out.println("-------------------------- OUTPUT ---------------------------");
            System.out.println("Acceleracio "+acceleracio);
            System.out.println("gir "+gir);
            System.out.println("Outgear "+outgear);
            System.out.println("fre "+fre);
            System.out.println("-----------------------------------------------------------------");
        }

        return action;
    }


    public void reset() {
        System.out.println("Restarting the race!");
    }

    public void shutdown() {
        System.out.println("Bye bye!");
    }
}
